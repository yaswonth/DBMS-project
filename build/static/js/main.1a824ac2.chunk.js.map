{"version":3,"sources":["components/Firebase.js","components/Home.js","components/Upload.js","components/Error.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Home","useEffect","document","title","useState","uid","setuid","file","setfile","load","setload","bu","fileref","useRef","b","src","width","height","id","ref","onFocus","console","log","className","onClick","window","open","current","focus","iframe","frames","getElementById","iframeWindow","contentWindow","print","placeholder","style","display","flexDirection","outline","border","borderRadius","padding","resize","background","fontSize","value","onChange","e","target","alert","database","orderByChild","equalTo","once","snapshot","exists","k","Object","keys","val","uri","xhr","XMLHttpRequest","responseType","onload","event","filer","Blob","response","type","fileURL","URL","createObjectURL","send","catch","er","Upload","u","setu","d","accept","files","name","fname","split","stor","storage","length","put","on","m","Math","round","bytesTransferred","totalBytes","error","getDownloadURL","then","url","push","set","err","Error","to","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1a824ac2.chunk.js","sourcesContent":["import firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAUe7Ds6VyHAuzXCC03YnytHqeUAJtzbO8\",\n  authDomain: \"shyam-4ff74.firebaseapp.com\",\n  databaseURL: \"https://shyam-4ff74.firebaseio.com\",\n  projectId: \"shyam-4ff74\",\n  storageBucket: \"shyam-4ff74.appspot.com\",\n  messagingSenderId: \"118713083232\",\n  appId: \"1:118713083232:web:912eda49bba13430402a05\",\n  measurementId: \"G-19QGH462QF\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;","import React, {useState,useRef,useEffect} from 'react'\nimport '../App.css';\nimport firebase from './Firebase';\nexport default function Home(){\n\n    useEffect(()=>{\n        document.title = 'Project';\n    })\n\n    const [uid,setuid] = useState('');\n    const [file,setfile] = useState(null);\n    const [load,setload] = useState(false);\n    let bu = 'LOAD';\n    let fileref = useRef(null);\n    const op=()=>{\n        console.log(file);\n        window.open(file,'_blank');\n    }\n    const pr=()=>{\n        fileref.current.focus();\n        const iframe = document.frames\n      ? document.frames['fr']\n      : document.getElementById('fr');\n    const iframeWindow = iframe.contentWindow || iframe;\n\n    iframe.focus();\n    iframeWindow.print();\n\n    return false;\n    }\n    let stylee={\n        display:'flex',\n        flexDirection:'column',\n        outline:'none',\n        border:1,\n        borderRadius:5,\n        padding: 5,\n        resize:'none',\n        background: '#fff',\n        width: '100%',\n        fontSize:16\n    }\n    let b=null;\n    const upd=()=>{\n        setfile(null);\n        if(uid==''){\n            alert('Please fill the uniqueid!!');\n        }else{\n            setload(true);\n            firebase.database().ref('pdfs').orderByChild('id').equalTo(uid).once('value',(snapshot)=>{\n                if(snapshot.exists()){\n                    var k = Object.keys(snapshot.val())\n                    console.log(snapshot.val()[k[0]].uri);\n                    var xhr = new XMLHttpRequest();\n                    xhr.responseType = 'blob';\n                    xhr.onload = function(event) {\n                        const filer = new Blob([xhr.response], { type: 'application/pdf' });\n            \n                        const fileURL = URL.createObjectURL(filer);\n            \n                        setfile(fileURL);\n                    };\n                    xhr.open('GET', snapshot.val()[k[0]].uri);\n                    xhr.send();\n                    // setfile('http://www.africau.edu/images/default/sample.pdf')\n                }else{\n                    alert('File not exist')\n                    setfile('File not exists!!')\n                }\n                setload(false);\n            })\n            .catch(er=>{\n                console.log(er);\n            })\n        }\n    }\n    if(load){\n        bu ='Loading...';\n    }else{\n        bu = 'LOAD';\n    }\n\n    if(file!=null){\n        if(file=='File not exists!!'){\n            b=<p>File doesn't exists!!</p>;\n        }else{\n            \n            \n            b=(<div><p>File exists!!</p>\n               <iframe src={file} width='200' height='240' id='fr' ref={fileref} onFocus={()=>console.log('pdf focused')} ></iframe>\n                \n                <div className='it'>\n                    <p className='bo' onClick={op} >OPEN</p>\n                    <p className='bo' onClick={pr} >PRINT</p>\n                    {/* <ReactToPrint\n                       trigger={() => {\n                               return <p className='bo'>PRINT</p>;\n                               }}\n                        content={file}\n                    /> */}\n                    \n                </div></div>);\n        }\n    }else{\n        b = null;\n    }\n    return(\n        <div className='App' >\n            <div className='w-m'>\n                <div className='inp'>\n                <input placeholder='Unique number' style={stylee} value={uid} onChange={e=>setuid(e.target.value)}/>\n                </div>\n                <div className='but' onClick={upd}>\n                    {bu}\n                </div>\n                {b}\n                \n                \n            </div>\n        </div>\n    )\n}","import React, {useState,useRef,useEffect} from 'react'\nimport '../App.css';\nimport firebase from './Firebase';\nexport default function Upload(){\n\n\n    useEffect(()=>{\n        document.title = 'Upload';\n    })\n    const [uid,setuid] = useState('');\n    const [file,setfile] = useState(null);\n    const [u,setu] = useState(null);\n    var d = 'UPLOAD';\n    let fileref = useRef(null);\n    let b = null;\n    let bu=null;\n    let stylee={\n        display:'flex',\n        flexDirection:'column',\n        outline:'none',\n        border:1,\n        borderRadius:5,\n        padding: 5,\n        resize:'none',\n        background: '#fff',\n        width: '100%',\n        fontSize:16\n    }\n    const change=(event)=>{\n        if(event.target.files && event.target.files[0]){\n            setfile(event.target.files[0].name);\n        }else{\n            setfile(null);\n        }\n    }\n    const upd=()=>{\n        if(uid==''){\n            alert('Please fill the uniqueid!!');\n        }else{\n            if(fileref.current.files && fileref.current.files[0]){\n                setu('Loading...');\n                firebase.database().ref('pdfs').orderByChild('id').equalTo(uid).once('value',(snapshot)=>{\n                    if(snapshot.exists()){\n                        setu(null);\n                        alert('unique id already exists!!');\n                    }else{\n                        var fname=fileref.current.files[0].name.split('.');\n                        let stor = firebase.storage().ref('pdfs/'+uid+'.'+fname[fname.length-1]);\n                        let up = stor.put(fileref.current.files[0]);\n                        up.on('state_changed',\n                        (snapshot)=>{\n                            var m = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100) ;\n                            var prog = \"pdf upload progress: \"+m+\"%\";\n                            setu(prog);\n                        },\n                        (error)=>{\n                          setu(null);\n                        },\n                        ()=>{\n                            setu('wait...Uploading data...');\n                            stor.getDownloadURL().then(url=>{\n                                firebase.database().ref('pdfs').push().set({\n                                   id:uid,\n                                   uri:url\n                               }).then(()=>{\n                               setu(null);\n                               \n                            })\n                            .catch(err=>{\n                               alert('Network issues...please try again!');\n                            });\n                               setu(null);\n                            });\n                        });\n                    }\n                }).catch(er=>{\n                    console.log(er);\n                })\n                \n            }else{\n                alert('Please select a pdf file to upload!!');\n            }\n        }\n        // setu(null);\n    }\n    if(file!=null){\n        b = <p>{file}</p>\n    }else{\n        b = null;\n    }\n\n    if(u!=null){\n        d = 'Uploading...'\n        bu = <p>{u}</p>;\n    }else{\n        d = 'UPLOAD'\n        bu = null;\n    }\n\n\n    return(\n        <div className='App' >\n            <div className='w-m'>\n                <div className='inp'>\n                <input placeholder='Unique number' style={stylee} value={uid} onChange={e=>setuid(e.target.value)}/>\n                </div>\n                <div className='new-choose'>\n                  <button className='new-choose-bt'>Choose file</button>\n                  <input type=\"file\" accept=\"application/pdf\" className='dash-ch-in' ref={fileref} onChange={change} />\n                </div>\n                {b}\n                <div className='but' onClick={upd}>\n                    {d}\n                </div>\n                {bu}\n                \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nexport default function Error(){\n    return(\n        <div className='er-c'>\n            <div className='er-n'>\n                <p className='er-t'>\n                    404\n                </p>\n                <Link to='/'>Go to Home page</Link>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Upload from './components/Upload';\nimport Error from './components/Error';\nfunction App() {\n  return (\n    <Router>\n    <Switch>\n      <Route exact path='/' >\n        <Home />\n      </Route>\n      <Route  path='/upload' >\n        <Upload />\n      </Route>\n      <Route  path='*' >\n        <Error />\n      </Route>\n    </Switch> \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}